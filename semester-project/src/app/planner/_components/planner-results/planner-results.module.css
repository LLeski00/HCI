.resultContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 400px;
  margin: 0 auto;
}

.resultContainer h3,
.infoContent {
  text-align: center;
}
.plannerResultsContainer {
  display: flex;
  justify-content: space-evenly;
  position: relative;
  margin-bottom: 180px;
}

.itemLeft,
.itemCenter,
.itemRight {
  opacity: 0;
  animation: reveal 2s linear forwards;
}

.itemLeft {
  transform: translateY(80px);
  animation-delay: 2s;
}

.itemCenter {
  transform: translateY(0px);
  animation-delay: 3s;
}

.itemRight {
  transform: translateY(100px);
  animation-delay: 1s;
}

.infoContent {
  margin-top: 20px;
  border-radius: 5px;
  border: 1px solid var(--blue-background);
  box-shadow: 2px 2px 2px 0px rgba(17, 51, 102, 0.3);
  background-color: var(--background);
  width: 100%;
  box-sizing: border-box;
  text-align: center;
}

.itemLeft::before,
.itemCenter::before,
.itemRight::before {
  font-size: 2.5rem;
  position: absolute;
  top: -50px;
  left: 50%;
  transform: translateX(-50%);
}

.itemCenter::before {
  content: 'ðŸ¥‡';
}

.itemLeft::before {
  content: 'ðŸ¥ˆ';
}

.itemRight::before {
  content: 'ðŸ¥‰';
}

@keyframes reveal {
  from {
    opacity: 0;
    transform: translateY(150px);
  }
  to {
    opacity: 1;
  }
}

@media (max-width: 1024px) {
  .plannerResultsContainer {
    flex-direction: column;
    align-items: center;
    gap: 5rem;
  }

  .itemCenter {
    order: 1;
    transform: translateY(0);
    animation-delay: 0.5s !important;
  }
  .itemLeft {
    order: 2;
    transform: translateY(0);
    animation-delay: 1s !important;
  }
  .itemRight {
    order: 3;
    transform: translateY(0);
    animation-delay: 1.5s !important;
  }
}

@media (min-width: 768px) and (max-width: 1024px) {
  .plannerResultsContainer {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 5rem;
    justify-items: center;
  }

  .itemCenter,
  .itemLeft,
  .itemRight {
    transform: translateY(0);
    width: 100%;
    max-width: 400px;
  }

  .itemCenter {
    grid-column: 1 / 3;
    animation-delay: 0.5s !important;
    justify-self: center;
  }

  .itemLeft {
    grid-column: 1 / 2;
    animation-delay: 1s !important;
  }

  .itemRight {
    grid-column: 2 / 3;
    animation-delay: 1.5s !important;
  }
}
